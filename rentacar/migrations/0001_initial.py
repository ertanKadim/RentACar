# Generated by Django 4.2.5 on 2023-10-22 10:04

import autoslug.fields
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import rentacar.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Marka Adı')),
            ],
            options={
                'verbose_name': 'Marka',
                'verbose_name_plural': 'Markalar',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CaseType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=50, verbose_name='Kasa Tipi')),
            ],
            options={
                'verbose_name': 'Kasa Tipi',
                'verbose_name_plural': 'Kasa Tipleri',
                'ordering': ['type'],
            },
        ),
        migrations.CreateModel(
            name='FuelType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=50, verbose_name='Yakıt Türü')),
            ],
            options={
                'verbose_name': 'Yakıt Türü',
                'verbose_name_plural': 'Yakıt Türleri',
                'ordering': ['type'],
            },
        ),
        migrations.CreateModel(
            name='TransmissionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=50, verbose_name='Vites Türü')),
            ],
            options={
                'verbose_name': 'Vites Türü',
                'verbose_name_plural': 'Vites Türleri',
                'ordering': ['type'],
            },
        ),
        migrations.CreateModel(
            name='VehicleType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=50, verbose_name='Araç Tipi')),
            ],
            options={
                'verbose_name': 'Araç Tipi',
                'verbose_name_plural': 'Araç Tipleri',
                'ordering': ['type'],
            },
        ),
        migrations.CreateModel(
            name='Series',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Seri Adı')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='series', to='rentacar.brand')),
            ],
            options={
                'verbose_name': 'Seri',
                'verbose_name_plural': 'Seriler',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Model Adı')),
                ('series', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='models', to='rentacar.series')),
            ],
            options={
                'verbose_name': 'Model',
                'verbose_name_plural': 'Modeller',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveIntegerField(validators=[rentacar.models.validate_year], verbose_name='Yıl')),
                ('is_available', models.BooleanField(default=False, verbose_name='Kiralık Mı?')),
                ('is_damaged', models.BooleanField(default=False, verbose_name='Hasarlı Mı?')),
                ('km', models.PositiveBigIntegerField(verbose_name='Kilometre')),
                ('number_of_doors', models.PositiveSmallIntegerField(verbose_name='Kapı Sayısı')),
                ('number_of_seats', models.PositiveSmallIntegerField(null=True, verbose_name='Koltuk Sayısı')),
                ('luggage_volume', models.PositiveIntegerField(verbose_name='Bagaj Hacmi')),
                ('color', models.CharField(max_length=50, verbose_name='Renk')),
                ('price_per_day', models.DecimalField(decimal_places=2, max_digits=9, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Günlük Fiyat')),
                ('image1', models.URLField(blank=True, null=True, verbose_name='1. Fotoğrak Linki')),
                ('image2', models.URLField(blank=True, null=True, verbose_name='2. Fotoğrak Linki')),
                ('image3', models.URLField(blank=True, null=True, verbose_name='3. Fotoğrak Linki')),
                ('image4', models.URLField(blank=True, null=True, verbose_name='4. Fotoğrak Linki')),
                ('plate_number', models.CharField(blank=True, max_length=11, null=True, unique=True, verbose_name='Plaka Numarası')),
                ('unique_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='get_slug', unique=True, verbose_name='Slug')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Güncellenme Tarihi')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rentacar.brand', verbose_name='Marka')),
                ('case_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rentacar.casetype', verbose_name='Kasa Tipi')),
                ('fuel_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rentacar.fueltype', verbose_name='Yakıt Türü')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rentacar.model', verbose_name='Model')),
                ('series', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rentacar.series', verbose_name='Seri')),
                ('transmission_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rentacar.transmissiontype', verbose_name='Vites Türü')),
                ('vehicle_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rentacar.vehicletype', verbose_name='Araç Tipi')),
            ],
            options={
                'verbose_name': 'Araba',
                'verbose_name_plural': 'Arabalar',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(blank=True, verbose_name='Alış Tarihi')),
                ('start_time', models.TimeField(blank=True, verbose_name='Alış Saati')),
                ('return_date', models.DateField(blank=True, verbose_name='Teslim Tarihi')),
                ('return_time', models.TimeField(blank=True, verbose_name='Teslim Saati')),
                ('pickup_location', models.CharField(blank=True, max_length=255, verbose_name='Alış Yeri')),
                ('dropoff_location', models.CharField(blank=True, max_length=255, verbose_name='Teslim Yeri')),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rentacar.car')),
            ],
            options={
                'verbose_name': 'Rezervasyon',
                'verbose_name_plural': 'Rezervasyonlar',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_admin', models.BooleanField(default=False, verbose_name='Admin misin?')),
                ('is_customer', models.BooleanField(default=False, verbose_name='Müşteri misin?')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
